#ifndef __NETWORKCONFIG_H__
#define __NETWORKCONFIG_H__

typedef void (*PFN_NETWORK_STATUS)(void* a_pThis, int a_nStatus);
typedef void (*PFN_NETWORK_CONNECT)(void* a_pThis,int a_nIndex, int a_nCurClientCnt);
typedef void (*PFN_NETWORK_DISCONNECT)(void* a_pThis, int a_nIndex, int a_nCurClientCnt);
typedef void (*PFN_NETWORK_ERROR)(void* a_pThis, int a_nServerErrno, int a_nSystemErrno);
typedef bool (*PFN_NETWORK_RECEIVE)(void* a_pThis, int a_nIndex, volatile unsigned char * a_sData, int a_nLength);

#define MAX_NIC_NUM 3
#define TCP_SERVER_MAX_CLIENTS 20

#if defined(WIN32)
#define ERRNO WSAGetLastError()
#else  
#define ERRNO errno
#endif

typedef enum{
	eNETWORK_STATUS_NONE = 0x00,
	eNETWORK_STATUS_INIT = 0x01,
	eNETWORK_STATUS_START= 0x02,
	eNETWORK_STATUS_STOP = 0x04, 
	eNETWORK_STATUS_RESTART = 0x08, 
	eNETWORK_STATUS_SEND = 0x10,
}eNETWORK_STATUS;


typedef enum{
	eNETWORK_ERROR_ILLEGAL_PORT = 0x01,
	eNETWORK_ERROR_CHECK_STATUS,
	eNETWORK_ERROR_TOO_MUCH_CLIENT,
	eNETWORK_ERROR_CREATE_SOCKET_FAILED,
	eNETWORK_ERROR_IOCTL_FAILED,
	eNETWORK_ERROR_SETSOCKETOPT_FAILED,
	eNETWORK_ERROR_FCNTL_FAILED,
	eNETWORK_ERROR_BIND_FAILED,
	eNETWORK_ERROR_LISTEN_FAILED,
	eNETWORK_ERROR_CREATE_THREAD_FAILED, // 0x0a
	eNETWORK_ERROR_JOIN_THREAD_FAILED,
	eNETWORK_ERROR_CLOSE_SOCKET_FAILED,
	eNETWORK_ERROR_SEND_FAILED,
	eNETWORK_ERROR_OVERFLOW_MSG_LENGTH,
	eNETWORK_ERROR_UNMATCH_MSG_LENGTH,
	eNETWORK_ERROR_UNKNOWN_CLIENT,
}eNETWORK_ERROR;
#endif // __NETWORKCONFIG_H__
